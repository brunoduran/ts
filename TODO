## Features to be implemented

Doubtful tasks:
 - Allow killing 'ts' in a nice way.
   - It's good, because a spawner of 'ts' may want to kill it.
 - Allow the 'only-tail' output, without any storage. The number of lines
   or bytes should be choosable.
   - No program should give that big amount of output, so it cannot be stored.

 - What happens if the output disk is full? Should be decide a good behaviour
   in that situation?

Future:
 - Allow killing 'ts' in a nice way.
v0.3:
 - Allow sending the output by mail, or passing it to a program if an
   env var defines it.
 - Allow gzipping the output
 - Add a flag for swapping two jobs in the queue (-U id-id)
 -* Limit the jobs in 'finished' state according to $TS_MAXFINISHED
 -* Output the jobid in stdout.
 -* Status check with -s. Return the state in stdout.
 -* An env var may define the socket path.
v0.2.3:
 -* '-nf' doesn't leave the job in 'finished' state
 -* Fixed a bug in -r
 -* '-u' implemented. For altering the queue order.
 -* '-w' returns the waited errorlevel
 -* '-o' returns the output file of the last job
v0.2.1:
 -* Fixed a bug in the wait-notifications.
 -* Improved the compilation, including almost all the proper files.
v0.2:
 -* Add a '-h' for help
 -* Have a nice list output (correctly formatted)
 -* Allow killing the running job (Allowed with -p easily)
 -* Allow tailing any job
 -* Allow removing a job from the queue
 -* Allow waiting any job
v0.1:
 -* The clients should _always_ go into background. *
 -* Allow to receive more parameters in the command line, and them be joined
   with spaces for the command passed to bash.
 -* There should be no limit on command line parameters.
 -* There should be no limit on lines outputed by "-l".
 -* Get the list of finished jobs, with its errorlevel.
 -* The list of finished jobs should be clenead on demmand "-c".
 -* Output to a file should be possible. Use mkstemp().
 -* There should be no limit on output filename.
v0.0.1:
 -* add tasks, and they run one after another. Input closed. Output in stdout.
